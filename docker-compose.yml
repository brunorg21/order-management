version: "3.9"
services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "${API_PORT}:${API_PORT}"
    env_file:
      - ./.env
    environment:
      - DOTNET_HOST_PATH=/app
      - ConnectionStrings__Connection=Host=db;Port=${POSTGRES_PORT};Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - ServiceBus__UpdateOrderQueue=${SERVICEBUS_UPDATE_ORDER_QUEUE}
      - AllowedOrigins=${FRONTEND_URL}
      - ASPNETCORE_ENVIRONMENT=${API_DOTNET_ENV}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${API_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - db

  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    env_file:
      - ./.env
    environment:
      - VITE_API_URL=${VITE_API_URL}
    depends_on:
      api:
        condition: service_healthy

  db:
    image: postgres:15
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
